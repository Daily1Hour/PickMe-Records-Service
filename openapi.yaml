openapi: 3.0.1
info:
  title: PickMe-Record
  version: 3.0.0
servers:
- url: http://localhost:8080
  description: Generated server url
security:
- BearerAuth: []
tags:
- name: Record
  description: 면접 기록 관리 API
paths:
  /record/interview/{interviewRecordId}:
    get:
      tags:
      - Record
      summary: 면접 기록 조회
      description: 특정 면접 기록을 조회합니다.
      operationId: getInterviewRecord
      parameters:
      - name: interviewRecordId
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: X-User-Id
        in: header
        description: 사용자 ID (식별값)
        required: true
        schema:
          type: string
          default: 74488dfc-e0f1-70ba-a329-2c0fdb8a54d6
      - name: X-User-Name
        in: header
        description: 사용자 이름
        required: false
        schema:
          type: string
      - name: X-Client-Id
        in: header
        description: 클라이언트 ID
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/InterviewRecordResponseDTO"
    put:
      tags:
      - Record
      summary: 면접 기록 업데이트
      description: 면접 기록의 기업명과 카테고리를 업데이트합니다.
      operationId: updateInterviewRecord
      parameters:
      - name: interviewRecordId
        in: path
        required: true
        schema:
          type: string
      - name: X-User-Id
        in: header
        description: 사용자 ID (식별값)
        required: true
        schema:
          type: string
          default: 74488dfc-e0f1-70ba-a329-2c0fdb8a54d6
      - name: X-User-Name
        in: header
        description: 사용자 이름
        required: false
        schema:
          type: string
      - name: X-Client-Id
        in: header
        description: 클라이언트 ID
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InterviewRecordUpdateDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/InterviewRecordResponseDTO"
    delete:
      tags:
      - Record
      summary: 면접 기록 삭제
      description: 면접 기록과 그에 속한 모든 질문과 답변을 삭제합니다.
      operationId: deleteInterviewRecord
      parameters:
      - name: interviewRecordId
        in: path
        required: true
        schema:
          type: string
      - name: X-User-Id
        in: header
        description: 사용자 ID (식별값)
        required: true
        schema:
          type: string
          default: 74488dfc-e0f1-70ba-a329-2c0fdb8a54d6
      - name: X-User-Name
        in: header
        description: 사용자 이름
        required: false
        schema:
          type: string
      - name: X-Client-Id
        in: header
        description: 클라이언트 ID
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /record/interview/{interviewRecordId}/detail/{detailIndex}:
    put:
      tags:
      - Record
      summary: 질문 및 답변 업데이트
      description: 면접 기록의 특정 질문과 답변을 업데이트합니다.
      operationId: updateRecordDetail
      parameters:
      - name: interviewRecordId
        in: path
        required: true
        schema:
          type: string
      - name: detailIndex
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: X-User-Id
        in: header
        description: 사용자 ID (식별값)
        required: true
        schema:
          type: string
          default: 74488dfc-e0f1-70ba-a329-2c0fdb8a54d6
      - name: X-User-Name
        in: header
        description: 사용자 이름
        required: false
        schema:
          type: string
      - name: X-Client-Id
        in: header
        description: 클라이언트 ID
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecordDetailUpdateDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RecordDetailResponseDTO"
    delete:
      tags:
      - Record
      summary: 질문 및 답변 삭제
      description: 면접 기록의 특정 질문과 답변을 삭제합니다.
      operationId: deleteRecordDetail
      parameters:
      - name: interviewRecordId
        in: path
        required: true
        schema:
          type: string
      - name: detailIndex
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: X-User-Id
        in: header
        description: 사용자 ID (식별값)
        required: true
        schema:
          type: string
          default: 74488dfc-e0f1-70ba-a329-2c0fdb8a54d6
      - name: X-User-Name
        in: header
        description: 사용자 이름
        required: false
        schema:
          type: string
      - name: X-Client-Id
        in: header
        description: 클라이언트 ID
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /record/interview:
    post:
      tags:
      - Record
      summary: 면접 기록 생성
      description: 새로운 면접 기록을 생성합니다.
      operationId: createInterviewRecord
      parameters:
      - name: X-User-Id
        in: header
        description: 사용자 ID (식별값)
        required: true
        schema:
          type: string
          default: 74488dfc-e0f1-70ba-a329-2c0fdb8a54d6
      - name: X-User-Name
        in: header
        description: 사용자 이름
        required: false
        schema:
          type: string
      - name: X-Client-Id
        in: header
        description: 클라이언트 ID
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InterviewRecordCreateDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/InterviewRecordResponseDTO"
  /record/interview/{interviewRecordId}/detail:
    post:
      tags:
      - Record
      summary: 질문 및 답변 추가
      description: 기존 면접 기록에 새로운 질문과 답변을 추가합니다.
      operationId: createRecordDetail
      parameters:
      - name: interviewRecordId
        in: path
        required: true
        schema:
          type: string
      - name: X-User-Id
        in: header
        description: 사용자 ID (식별값)
        required: true
        schema:
          type: string
          default: 74488dfc-e0f1-70ba-a329-2c0fdb8a54d6
      - name: X-User-Name
        in: header
        description: 사용자 이름
        required: false
        schema:
          type: string
      - name: X-Client-Id
        in: header
        description: 클라이언트 ID
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecordDetailCreateDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RecordDetailResponseDTO"
  /record/sidebar:
    get:
      tags:
      - Record
      summary: 사이드바 데이터 조회
      description: 사이드바에 필요한 면접 기록 정보를 조회합니다.
      operationId: getSidebarData
      parameters:
      - name: X-User-Id
        in: header
        description: 사용자 ID (식별값)
        required: true
        schema:
          type: string
          default: 74488dfc-e0f1-70ba-a329-2c0fdb8a54d6
      - name: X-User-Name
        in: header
        description: 사용자 이름
        required: false
        schema:
          type: string
      - name: X-Client-Id
        in: header
        description: 클라이언트 ID
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InterviewRecordSidebarDTO"
  /:
    get:
      tags:
      - HealthCheck
      operationId: healthCheck
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    InterviewRecordUpdateDTO:
      required:
      - category
      - enterpriseName
      type: object
      properties:
        enterpriseName:
          type: string
          description: New Enterprise Name
          example: Updated Company
        category:
          type: string
          description: New Category
          example: Final interview
      description: DTO for updating an existing EnterpriseRecord
    InterviewRecordResponseDTO:
      type: object
      properties:
        interviewRecordId:
          type: string
        enterpriseName:
          type: string
        category:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        details:
          type: array
          items:
            $ref: "#/components/schemas/RecordDetailResponseDTO"
      description: DTO for EnterpriseRecord responses
    RecordDetailResponseDTO:
      type: object
      properties:
        question:
          type: string
        answer:
          type: string
      description: DTO for RecordDetail responses
    RecordDetailUpdateDTO:
      required:
      - answer
      - question
      type: object
      properties:
        question:
          type: string
          description: Updated Question
          example: Updated question
        answer:
          type: string
          description: Updated Answer
          example: Updated answer
      description: DTO for updating an existing RecordDetail
    InterviewRecordCreateDTO:
      required:
      - category
      - enterpriseName
      type: object
      properties:
        enterpriseName:
          type: string
          description: Enterprise Name
          example: Day Company
        category:
          type: string
          description: Category
          example: 1st interview
      description: DTO for creating a new EnterpriseRecord
    RecordDetailCreateDTO:
      required:
      - answer
      - question
      type: object
      properties:
        question:
          type: string
          description: Question
          example: Tell me about yourself
        answer:
          type: string
          description: Answer
          example: I am a highly motivated individual...
      description: DTO for creating a new RecordDetail
    InterviewRecordSidebarDTO:
      type: object
      properties:
        interviewRecordId:
          type: string
        enterpriseName:
          type: string
        category:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      description: DTO for EnterpriseRecord sidebar data
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
